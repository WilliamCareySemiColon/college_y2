Feb 20, 2018 10:38:46 AM java.util.prefs.WindowsPreferences <init>
WARNING: Could not open/create prefs root node Software\JavaSoft\Prefs at root 0x80000002. Windows RegCreateKeyEx(...) returned error code 5.
USE version 5.0.0, Copyright (C) 1999-2017 University of Bremen
use> open Employee3.soil
Employee3.soil> -- Script generated by USE 5.0.0
Employee3.soil> 
Employee3.soil> !new Person('joe')
Employee3.soil> !joe.name := 'joe'
Employee3.soil> !joe.age := 17
Employee3.soil> !joe.salary := 0.0
<input>:1:0: Class `Person' does not have an attribute `salary'.
Employee3.soil> !new Person('sue')
Employee3.soil> !sue.name := 'sue'
Employee3.soil> !sue.age := 22
Employee3.soil> !sue.salary := 0.0
<input>:1:0: Class `Person' does not have an attribute `salary'.
Employee3.soil> !new Contract('itTechnician')
Employee3.soil> !itTechnician.jobTitle := 'itTechnician'
Employee3.soil> !itTechnician.hoursPerWeek := 40
<input>:1:0: Class `Contract' does not have an attribute `hoursPerWeek'.
Employee3.soil> !itTechnician.salary := 20000.0
Employee3.soil> !new Company('ibm')
Employee3.soil> !ibm.name := 'ibm'
Employee3.soil> !ibm.location := 'Dublin'
Employee3.soil> !ibm.hire(joe, itTechnician)
Employee3.soil> !new Company('Microsoft')
Employee3.soil> !Microsoft.name := 'microsoft'
Employee3.soil> !Microsoft.location := 'dublin'
Employee3.soil> !Microsoft.hire(sue, itTechnician)
[Error] 1 postcondition in operation call `Company::hire(self:Microsoft, p:sue, c:itTechnician)' does not hold:
  hirePost4: c.person->includes(p)
    c : Contract = itTechnician
    Evaluation failed because of multiplicity violation: expected link set size 1 at association end `person', found: 2

  call stack at the time of evaluation:
    1. Company::hire(self:Microsoft, p:sue, c:itTechnician) [caller: Microsoft.hire(sue, itTechnician)@<input>:1:0]

+------------------------------------------------------------------+
| Evaluation is paused. You may inspect, but not modify the state. |
+------------------------------------------------------------------+

Currently only commands starting with `?', `:', `help' or `info' are allowed.
`c' continues the evaluation (i.e. unwinds the stack).

Employee3.soil> !new Contract('SoftwareEngineer')

Currently only commands starting with `?', `:', `help' or `info' are allowed.
`c' continues the evaluation (i.e. unwinds the stack).

Employee3.soil> !SoftwareEngineer.jobTitle := 'SoftwareEngineer'

Currently only commands starting with `?', `:', `help' or `info' are allowed.
`c' continues the evaluation (i.e. unwinds the stack).

Employee3.soil> !SoftwareEngineer.hoursPerWeek := 40

Currently only commands starting with `?', `:', `help' or `info' are allowed.
`c' continues the evaluation (i.e. unwinds the stack).

Employee3.soil> !SoftwareEngineer.salary := 25000.0

Currently only commands starting with `?', `:', `help' or `info' are allowed.
`c' continues the evaluation (i.e. unwinds the stack).

Employee3.soil> !Microsoft.hire(sue, SoftwareEngineer)

Currently only commands starting with `?', `:', `help' or `info' are allowed.
`c' continues the evaluation (i.e. unwinds the stack).

Employee3.soil> 
Error: postcondition false in operation call `Company::hire(self:Microsoft, p:sue, c:itTechnician)'.
Employee3.soil> 
use> use> !new Person('sue')
use> !joe.salary := 0
<input>:1:0: Class `Person' does not have an attribute `salary'.
use> !joe.income := 0
use> !sue.income := 0
use> !joe.name := 'joe'
use> !sue.name := 'sue'
use> !joe.age := 18
use> !sue.age := 22
use> !new Contract('itTech')
use> !new Contract('itTest')
use> !itTech.jobTitle := 'itTech'
use> !itTest.jobTitle := 'itTest'
use> !itTech.salary := 20000
use> !itTest.salary := 15000
use> !new Company('ibm')
use> !new Company('apple')
use> !ibm.name := 'ibm'
use> !apple.name := 'apple'
use> open Employee2.soil
Employee2.soil> -- Script generated by USE 5.0.0
Employee2.soil> 
Employee2.soil> !new Person('joe')
Employee2.soil> !new Person('sue')
Employee2.soil> !joe.income := 0
Employee2.soil> !sue.income := 0
Employee2.soil> !joe.name := 'joe'
Employee2.soil> !sue.name := 'sue'
Employee2.soil> !joe.age := 18
Employee2.soil> !sue.age := 22
Employee2.soil> !new Contract('itTech')
Employee2.soil> !new Contract('itTest')
Employee2.soil> !itTech.jobTitle := 'itTech'
Employee2.soil> !itTest.jobTitle := 'itTest'
Employee2.soil> !itTech.salary := 20000
Employee2.soil> !itTest.salary := 15000
Employee2.soil> !new Company('ibm')
Employee2.soil> !new Company('apple')
Employee2.soil> !ibm.name := 'ibm'
Employee2.soil> !apple.name := 'apple'
Employee2.soil> 
use> <input>:1:0: Operation `Company::hire' is defined by a soil statement and cannot be entered with openter.
use> !new Person('joe')
use> !new Person('sue')
use> !joe.salary := 0
<input>:1:0: Class `Person' does not have an attribute `salary'.
use> !joe.income := 0
use> !sue.income := 0
use> !joe.name := 'joe'
use> !sue.name := 'sue'
use> !joe.age := 18
use> !sue.age := 22
use> !new Contract('itTech')
use> !new Contract('itTest')
use> !itTech.jobTitle := 'itTech'
use> !itTest.jobTitle := 'itTest'
use> !itTech.salary := 20000
use> !itTest.salary := 15000
use> !new Company('ibm')
use> !new Company('apple')
use> !ibm.name := 'ibm'
use> !apple.name := 'apple'
use> !openter ibm hire(joe,itTech)
precondition `hirePre1' is true
precondition `hirePre2' is true
precondition `hirePre3' is true
precondition `hirePre4' is true
use> !insert (joe, itTech) into hiredInto
use> !insert (itTech,ibm) into worksFor
use> opexit
Error: Unknown command `opexit'. Try `help'.
use> !opexit
postcondition `hirePost4' is true
postcondition `hirePost1' is true
postcondition `hirePost2' is true
postcondition `hirePost3' is true
use> !openter  itTech raiseSalary(0.1,joe)
precondition `personAge' is false
Error: precondition false in operation call `Contract::raiseSalary(self:itTech, rate:0.1, p:joe)'.
use> !openter apple hire(sue,itTest)
precondition `hirePre1' is true
precondition `hirePre2' is true
precondition `hirePre3' is true
precondition `hirePre4' is true
use> !insert (sue, itTest) into hiredInto
use> !insert (itTest,apple) into worksFor
use> !opexit
postcondition `hirePost4' is true
postcondition `hirePost1' is true
postcondition `hirePost2' is false
  c : Contract = itTest
  c.salary : Integer = 15000
  20000 : Integer = 20000
  (c.salary >= 20000) : Boolean = false
postcondition `hirePost3' is true
Error: postcondition false in operation call `Company::hire(self:apple, p:sue, c:itTest)'.
use> !openter ibm fire(joe,itTech)
precondition `firePre' is true
use> !delete  (ibm,itTech) from worksFor
<input>:1:0: Participant 1 of association `worksFor' must be of type `Contract', but `ibm' is of type `Company'.
use> !delete  (itTech,ibm) from worksFor
use> !delete  (joe,itTech) from hiredInto
use> !opexit
postcondition `firePost' is true
use> 