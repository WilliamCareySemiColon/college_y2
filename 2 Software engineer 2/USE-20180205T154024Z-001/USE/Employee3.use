-- Example illustrating pre- and postconditions

model Employee

-- classes

class Person
attributes
  name : String
  age : Integer
  salary : Real
operations
  raiseSalary(rate : Real) : Real
end

class Contract
attributes
jobTitle: String
salary: Real
hoursPerWeek: Integer
end

class Company
attributes
  name : String
  location : String
operations
  hire(p : Person, c : Contract)
  begin
  insert(p, c) into hiredInto;
  p.salary := p.salary + c.salary;
  insert(c,self) into worksFor
  end
  fire(p : Person, c : Contract)
  begin
  delete(c,self) from worksFor;
  p.salary := p.salary - c.salary;
  delete(p, c) from hiredInto
  end
end

-- associations

association hiredInto between
  Person[1] role employee
  Contract[*] role Job
end

association worksFor between
Contract[*] role JobDescription
Company[0..1] role employer
end

-- constraints

constraints

context Person::raiseSalary(rate : Real) : Real
  post raiseSalaryPost: 
    salary = salary@pre * (1.0 + rate)
  post resultPost:
    result = salary

context Company::hire(p : Person, c : Contract)
  pre  hirePre1: p.isDefined()
  pre  hirePre2: c.isDefined()
  pre  hirePre3: JobDescription->excludes(c)
  post hirePost: JobDescription->includes(c)

context Company::fire(p : Person, c : Contract)
  pre  firePre:  JobDescription->includes(c)
  post firePost: JobDescription->excludes(c)